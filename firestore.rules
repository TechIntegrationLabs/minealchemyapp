rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // User profiles
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
      
      // Allow users to read their own data
      match /private/{document=**} {
        allow read, write: if isOwner(userId);
      }
    }

    // Journal entries
    match /journalEntries/{entryId} {
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow read, update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Activities
    match /activities/{activityId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
    }

    // Health metrics
    match /healthMetrics/{metricId} {
      allow read, write: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Global collections (accessible to all authenticated users)
    match /quotes/{quoteId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    match /categories/{categoryId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
  }
}